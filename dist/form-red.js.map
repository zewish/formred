{"version":3,"file":"form-red.js","sources":["../src/actions.js","../node_modules/oget/src/oget.js","../node_modules/o.set/src/oset.js","../src/omit.js","../src/validate.js","../src/make-value.js","../src/reducer.js","../src/connect-to-form.js","../src/form.js","../src/field.js","../src/index.js"],"sourcesContent":["export const PREFIX = '@@formRed'\n\nexport const CREATE = `${PREFIX}_CREATE`;\nexport const DESTROY = `${PREFIX}_DESTROY`;\n\nexport const ADD = `${PREFIX}_ADD`;\nexport const REMOVE = `${PREFIX}_REMOVE`;\n\nexport const SET = `${PREFIX}_SET`;\nexport const SET_ALL = `${PREFIX}_SET_ALL`;\n\nexport const TOUCH = `${PREFIX}_TOUCH`;\nexport const UNTOUCH = `${PREFIX}_UNTOUCH`;\nexport const TOUCH_ALL = `${PREFIX}_TOUCH_ALL`;\nexport const UNTOUCH_ALL = `${PREFIX}_UNTOUCH_ALL`;\n\nexport const SUBMIT = `${PREFIX}_SUBMIT`;\nexport const SUBMIT_END = `${PREFIX}_SUBMIT_END`;\n\nexport const FORM_ERROR = `${PREFIX}_FORM_ERROR`;\nexport const FIELD_ERROR = `${PREFIX}_FIELD_ERROR`;\n\nexport const RESET = `${PREFIX}_RESET`;\n\nexport const create = (formName, opts) => ({\n    type: CREATE\n    , payload: {\n        formName\n        , opts\n    }\n});\n\nexport const destroy = formName => ({\n    type: DESTROY\n    , payload: { formName }\n});\n\nexport const add = (formName, fieldName, fieldValue, fieldType = 'text') => ({\n    type: ADD\n    , payload: {\n        formName\n        , fieldName\n        , fieldValue\n        , fieldType\n    }\n});\n\nexport const remove = (formName, fieldName) => ({\n    type: REMOVE\n    , payload: {\n        formName\n        , fieldName\n    }\n});\n\nexport const set = (formName, fieldName, fieldValue) => ({\n    type: SET\n    , payload: {\n        formName\n        , fieldName\n        , fieldValue\n    }\n});\n\nexport const setAll = (formName, values) => ({\n    type: SET_ALL\n    , payload: {\n        formName\n        , values\n    }\n});\n\nexport const touch = (formName, fieldName) => ({\n    type: TOUCH\n    , payload: {\n        formName\n        , fieldName\n    }\n});\n\nexport const untouch = (formName, fieldName) => ({\n    type: UNTOUCH\n    , payload: {\n        formName\n        , fieldName\n    }\n});\n\nexport const touchAll = (formName) => ({\n    type: TOUCH_ALL\n    , payload: { formName }\n});\n\nexport const untouchAll = (formName) => ({\n    type: UNTOUCH_ALL\n    , payload: { formName }\n});\n\nexport const submit = formName => ({\n    type: SUBMIT\n    , payload: { formName }\n});\n\nexport const submitEnd = (formName, formError = null, fieldErrors = null) => ({\n    type: SUBMIT_END\n    , payload: {\n        formName\n        , formError\n        , fieldErrors\n    }\n});\n\nexport const reset = (formName, full = true) => ({\n    type: RESET\n    , payload: {\n        formName\n        , full\n    }\n});\n\nexport const formError = (formName, error = null) => ({\n    type: FORM_ERROR\n    , payload: {\n        formName\n        , error\n    }\n});\n\nexport const fieldError = (formName, fieldName, error = null) => ({\n    type: FIELD_ERROR\n    , payload: {\n        formName\n        , fieldName\n        , error\n    }\n});","'use strict';\n\nexport default (obj, path, def) => {\n    let res = path\n    .replace(/\\[/g, '.')\n    .replace(/\\]/g, '')\n    .replace(/^\\./, '')\n    .split('.')\n    .reduce((prev, curr) => {\n        return prev && prev[curr]\n    }, obj);\n\n    return (res === undefined)\n      ? def\n      : res;\n}","'use strict';\n\nexport default (obj, path, value) => {\n    let parts = path\n    .replace(/\\[/g, '.')\n    .replace(/\\]/g, '')\n    .replace(/^\\./, '')\n    .split('.');\n\n    parts.reduce((prev, curr, i) => {\n        if (!(typeof prev[curr] == 'object')) {\n            prev[curr] = {};\n        }\n\n        if (parts.length === i + 1) {\n            prev[curr] = value;\n        }\n\n        return prev[curr];\n    }, obj || {});\n\n    return obj;\n}","export default (obj, keys = []) => {\n    const omitted = [].concat(keys)\n    .reduce((dest, key) => {\n        dest[key] = true;\n        return dest;\n    }, {});\n\n    return Object.keys(obj || {})\n    .reduce((dest, key) => {\n        if (!omitted[key]) {\n            dest[key] = obj[key];\n        }\n\n        return dest;\n    }, {});\n};","import get from 'oget';\nimport set from 'o.set';\n\nexport default (form) => {\n    const { fields, values, opts } = form;\n    const errors = form.opts.validate(values, opts);\n\n    if (!(typeof errors == 'object')) {\n        return form;\n    }\n\n    form.errors = null;\n\n    Object.keys(fields)\n    .forEach(fieldName => {\n        const error = get(\n            errors, fieldName, errors[fieldName] || null\n        );\n\n        if (error) {\n            form.errors = form.errors || {};\n            set(form.errors, fieldName, error);\n        }\n\n        form.fields[fieldName] = {\n            ...(fields[fieldName] || {})\n            , error\n        };\n    });\n\n    return form;\n};","import get from 'oget';\n\nexport const empty = (fieldType) => {\n    if (fieldType == 'checkbox' || fieldType == 'radio') {\n        return false;\n    }\n\n    return '';\n}\n\nexport const fromEvent = (ev) => {\n    if (!ev || !ev.stopPropagation || !ev.preventDefault) {\n        return ev;\n    }\n\n    switch (ev.target.type) {\n        case 'radio':\n        case 'checkbox':\n            return ev.target.checked;\n        case 'file':\n            return ev.target.files || get(ev, 'dataTransfer.files');\n    }\n\n    return ev.target.value;\n};","import get from 'oget';\nimport set from 'o.set';\nimport omit from './omit';\nimport validate from './validate';\nimport { empty } from './make-value';\n\nimport {\n    CREATE\n    , DESTROY\n\n    , ADD\n    , REMOVE\n\n    , SET\n    , SET_ALL\n\n    , TOUCH\n    , UNTOUCH\n    , TOUCH_ALL\n    , UNTOUCH_ALL\n\n    , SUBMIT\n    , SUBMIT_END\n    , RESET\n\n    , FORM_ERROR\n    , FIELD_ERROR\n} from './actions';\n\nconst emptyField = {\n    touched: false\n    , error: null\n    , type: 'text'\n};\n\nconst parseValues = (fields, values = {}, omitFieldName) => Object\n.keys(fields)\n.reduce((obj, fieldName) => {\n    if (fieldName === omitFieldName) {\n        return obj;\n    }\n\n    set(obj, fieldName\n        , get(values, fieldName) || empty(\n            fields[fieldName].type\n        )\n    );\n\n    return obj;\n}, {});\n\nexport default (state = {}, { type, payload }) => {\n    const formName = get(payload, 'formName')\n        , fieldName = get(payload, 'fieldName');\n\n    let form = get(state, `${formName || ''}`, {\n        opts: {}\n        , fields: {}\n        , values: {}\n        , submitting: false\n        , errors: null\n        , error: null\n    });\n\n    let fields = get(form, 'fields', {})\n        , values = get(form, 'values', {});\n\n    switch (type) {\n        case CREATE:\n            const opts = get(payload, 'opts', {});\n\n            return {\n                ...state\n                , [formName]: state[formName] || {\n                    ...form\n                    , values: opts.values\n                      ? parseValues(fields, opts.values)\n                      : {}\n                    , opts\n                }\n            };\n\n        case DESTROY:\n            return {\n                ...omit(state, formName)\n            };\n\n        case ADD:\n            if (get(values, fieldName) === undefined) {\n                set(form.values, `${fieldName}`, payload.fieldValue);\n            }\n\n            form.fields = {\n                ...fields\n                , [fieldName]: fields[fieldName] || {\n                    ...emptyField\n                    , type: payload.fieldType\n                }\n            };\n\n            return {\n                ...state\n                , [formName]: {\n                    ...validate(form)\n                }\n            };\n\n        case REMOVE:\n            form.fields = omit(fields, fieldName);\n            form.values = parseValues(fields, values, fieldName);\n\n            return {\n                ...state\n                , [formName]: {\n                    ...validate(form)\n                }\n            };\n\n        case SET:\n            set(form.values, `${fieldName}`, payload.fieldValue);\n\n            return {\n                ...state\n                , [formName]: {\n                    ...validate(form)\n                }\n            };\n\n        case SET_ALL:\n            values = parseValues(fields, payload.values);\n\n            return {\n                ...state\n                , [formName]: {\n                    ...validate({\n                        ...form\n                        , values\n                        , opts: {\n                            ...(form.opts || {})\n                            , values\n                        }\n                    })\n                }\n            };\n\n        case TOUCH:\n        case UNTOUCH:\n            if (!fields[fieldName]) {\n                return state;\n            }\n\n            const field = fields[fieldName];\n            field.touched = type == TOUCH;\n\n            return {\n                ...state\n                , [formName]: {\n                    ...form\n                    , fields: {\n                        ...fields\n                        , [fieldName]: field\n                    }\n                }\n            };\n\n        case TOUCH_ALL:\n        case UNTOUCH_ALL:\n            fields = Object.keys(fields).reduce((obj, name) => {\n                obj[name] = {\n                    ...obj[name]\n                    , touched: type == TOUCH_ALL\n                };\n\n                return obj;\n            }, fields);\n\n            return {\n                ...state\n                , [formName]: {\n                    ...form\n                    , fields\n                }\n            };\n\n        case SUBMIT:\n            return {\n                ...state\n                , [formName]: {\n                    ...form\n                    , submitting: true\n                }\n            };\n\n        case SUBMIT_END:\n            const { fieldErrors } = payload;\n\n            if (fieldErrors) {\n                fields = Object.keys(fields).reduce((obj, fieldName) => {\n                    const error = get(fieldErrors, fieldName);\n\n                    if (!error) {\n                        return obj;\n                    }\n\n                    obj[fieldName].error = error;\n\n                    form.errors = form.errors || {};\n                    set(form, `errors.${fieldName}`, payload.error);\n\n                    return obj;\n                }, fields);\n\n                form = {\n                    ...form, fields\n                };\n            }\n\n            return {\n                ...state\n                , [formName]: {\n                    ...form\n                    , submitting: false\n                    , error: payload.formError\n                }\n            };\n\n        case RESET:\n            fields = Object.keys(fields).reduce((obj, field) => {\n                obj[field] = {\n                    ...emptyField\n                    , type: fields[field].type\n                };\n\n                return obj;\n            }, {});\n\n            values = form.opts.values;\n\n            if (payload.full) {\n                values = Object.keys(fields).reduce((obj, field) => {\n                    set(\n                        obj\n                        , field\n                        , empty(fields[field].type)\n                    );\n\n                    return obj;\n                }, {});\n            }\n\n            return {\n                ...state\n                , [formName]: validate({\n                    ...form\n                    , fields\n                    , values\n                    , submitting: false\n                    , error: null\n                })\n            };\n\n        case FORM_ERROR:\n            return {\n                ...state\n                , [formName]: {\n                    ...form\n                    , error: payload.error\n                }\n            };\n\n        case FIELD_ERROR:\n            if (!fields[fieldName]) {\n                return state;\n            }\n\n            form.fields[fieldName].error = payload.error;\n            form.errors = form.errors || {};\n\n            set(form, `errors.${fieldName}`, payload.error);\n\n            return {\n                ...state\n                , [formName]: { ...form }\n            };\n    }\n\n    return state;\n};","import { connect } from 'react-redux';\nimport get from 'oget';\n\nimport {\n    create\n    , destroy\n\n    , add\n    , remove\n\n    , set\n    , setAll\n\n    , touch\n    , untouch\n    , touchAll\n    , untouchAll\n\n    , reset\n    , formError\n    , fieldError\n\n    , submit\n    , submitEnd\n} from './actions';\n\nexport default (formName, key = 'form') => connect(\n    ({ formRed }) => ({\n        [key]: get(formRed, `${formName}`, {\n            opts: {}\n            , fields: {}\n            , values: {}\n        })\n    })\n    , dispatch => ({\n        [`${key}Actions`]: {\n            formName\n            , dispatch\n\n            , create: (opts) => dispatch(\n                create(formName, opts)\n            )\n            , destroy: () => dispatch(\n                destroy(formName)\n            )\n\n            , add: (fieldName, fieldValue, fieldType) => dispatch(\n                add(formName, fieldName, fieldValue, fieldType)\n            )\n            , remove: fieldName => dispatch(\n                remove(formName, fieldName)\n            )\n\n            , set: (fieldName, fieldValue) => dispatch(\n                set(formName, fieldName, fieldValue)\n            )\n            , setAll: values => dispatch(\n                setAll(formName, values)\n            )\n\n            , touch: fieldName => dispatch(\n                touch(formName, fieldName)\n            )\n            , untouch: fieldName => dispatch(\n                untouch(formName, fieldName)\n            )\n            , touchAll: () => dispatch(\n                touchAll(formName)\n            )\n            , untouchAll: () => dispatch(\n                untouchAll(formName)\n            )\n\n            , reset: (full) => dispatch(\n                reset(formName, full)\n            )\n            , formError: err => dispatch(\n                formError(formName, err)\n            )\n            , fieldError: (fieldName, err) => dispatch(\n                fieldError(formName, fieldName, err)\n            )\n        }\n    })\n    , (stateProps, dispatchProps, ownProps) => {\n        const keyActions = `${key}Actions`\n            , formActions = dispatchProps[keyActions]\n            , form = stateProps[key];\n\n        const dispatch = formActions.dispatch;\n\n        formActions.submit = (ev, onSubmit) => {\n            if (ev && ev.preventDefault) {\n                ev.preventDefault();\n            }\n\n            let onSubmitFn = (typeof ev == 'function')\n              ? ev\n              : onSubmit;\n\n            onSubmitFn = onSubmitFn || form.opts.onSubmit;\n\n            if (!(typeof onSubmitFn == 'function')) {\n                throw Error('No onSubmit function given');\n            }\n\n            formActions.touchAll();\n            formActions.formError(null);\n\n            if (form.errors) {\n                return;\n            }\n\n            dispatch(submit(formName));\n            onSubmitFn(form.values, formActions);\n        };\n\n        formActions.submitEnd = (formError, fieldErrors) => {\n            dispatch(submitEnd(formName, formError, fieldErrors));\n\n            const {\n                onSubmitError\n                , onSubmitSuccess\n            } = form.opts;\n\n            if (formError || fieldErrors) {\n                return onSubmitError(formError, fieldErrors);\n            }\n\n            onSubmitSuccess();\n        };\n\n        return {\n            ...stateProps\n            , ...dispatchProps\n            , ...ownProps\n            , [keyActions]: formActions\n        };\n    }\n);","import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport get from 'oget';\n\nexport default\nclass Form extends Component {\n    static propTypes = {\n        opts: PropTypes.object.isRequired\n        , wrappedProps: PropTypes.object.isRequired\n    }\n\n    static childContextTypes = {\n        formActions: PropTypes.object\n        , form: PropTypes.object\n        , opts: PropTypes.object\n    }\n\n    getChildContext() {\n        const { formActions, form, opts } = this.props;\n        return { formActions, form, opts };\n    }\n\n    componentWillMount() {\n        const { formActions, opts } = this.props;\n        formActions.create(opts);\n    }\n\n    componentWillUnmount() {\n        const { formActions, opts } = this.props;\n\n        if (opts.autoDestroy) {\n            formActions.destroy();\n        }\n    }\n\n    valuesSet = false\n\n    componentWillReceiveProps({ wrappedProps, opts, formActions }) {\n        if (this.valuesSet) {\n            return;\n        }\n\n        const values = get(opts, 'values');\n\n        if (values) {\n            this.valuesSet = true;\n            formActions.setAll(values);\n        }\n    }\n\n    render() {\n        const {\n            Wrapped\n            , wrappedProps\n            , form\n            , formActions\n        } = this.props;\n\n        return (\n            <Wrapped\n              {...wrappedProps}\n              form={form}\n              formActions={formActions}\n            />\n        );\n    }\n};","import React, { Component, PropTypes } from 'react';\nimport connectToForm from './connect-to-form';\nimport { empty, fromEvent } from './make-value';\n\nimport omit from './omit';\nimport get from 'oget';\n\nexport default\nclass Field extends Component {\n    static propTypes = {\n        name: PropTypes.string.isRequired\n        , type: PropTypes.string.isRequired\n        , component: PropTypes.func.isRequired\n    }\n\n    static contextTypes = {\n        formActions: PropTypes.object\n        , form: PropTypes.object\n        , opts: PropTypes.object\n    }\n\n    constructor(props, context) {\n        super(props, context);\n        this.Wrapped = props.component;\n\n        if (!context.form || !context.formActions || !context.opts) {\n            throw Error('Field must be inside a formRed() decorated component');\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        if (`${this.Wrapped}` !== `${props.component}`) {\n            this.Wrapped = props.component;\n        }\n    }\n\n    componentWillMount() {\n        const { name, type } = this.props;\n\n        const value = get(\n            this.context.opts.values || {}\n            , name\n            , empty(type)\n        );\n\n        this.context.formActions.add(name, value, type);\n    }\n\n    render() {\n        const { Wrapped } = this;\n        const { form, formActions, opts } = this.context;\n        const { name, type } = this.props;\n\n        const extra = get(form, 'fields', {})[name];\n\n        return (\n            <Wrapped\n              extra={{\n                  form\n                  , formActions\n                  , error: get(form, `errors[${name}])`)\n                  , ...extra\n              }}\n              field={{\n                  ...omit(this.props, 'component')\n                  , value: get(\n                      form\n                      , `values[${name}]`\n                      , empty(type)\n                  )\n              }}\n              handlers={{\n                  onChange: ev => formActions.set(\n                      name, fromEvent(ev)\n                  )\n                  , onFocus: () => !opts.touchOnBlur && formActions.touch(name)\n                  , onBlur: () => opts.touchOnBlur && formActions.touch(name)\n              }}\n            />\n        );\n    };\n};","import React from 'react';\nimport * as actions from './actions';\nimport reducer from './reducer';\nimport connectToForm from './connect-to-form';\nimport Form from './form';\nimport Field from './field';\n\nexport {\n    actions\n    , reducer\n    , connectToForm\n    , Field\n};\n\nexport const formRed = (\n    opts\n    , mapPropsToOpts = () => ({})\n) => Wrapped => {\n    if (!opts.name) {\n        throw Error('Form name required');\n    }\n\n    opts = {\n        autoDestroy: true\n        , touchOnBlur: true\n        , validate() {}\n        , onSubmitSuccess() {}\n        , onSubmitError(formError, fieldErrors) {}\n        , ...opts\n    };\n\n    let ConnectedForm = connectToForm(opts.name)(Form);\n    ConnectedForm.displayName = `formRed(${Wrapped.displayName || Wrapped.name || 'Component'})`;\n\n    return props => {\n        opts = {\n            ...opts\n            , ...mapPropsToOpts(props)\n        };\n\n        return (\n            <ConnectedForm\n              opts={opts}\n              Wrapped={Wrapped}\n              wrappedProps={props}\n            />\n        );\n    };\n};"],"names":["PREFIX","CREATE","DESTROY","ADD","REMOVE","SET","SET_ALL","TOUCH","UNTOUCH","TOUCH_ALL","UNTOUCH_ALL","SUBMIT","SUBMIT_END","FORM_ERROR","FIELD_ERROR","RESET","create","formName","opts","destroy","add","fieldName","fieldValue","fieldType","remove","set","setAll","values","touch","untouch","touchAll","untouchAll","submit","submitEnd","formError","fieldErrors","reset","full","error","fieldError","obj","keys","omitted","concat","reduce","dest","key","Object","form","fields","errors","validate","forEach","get","empty","fromEvent","ev","stopPropagation","preventDefault","target","type","checked","files","value","emptyField","parseValues","omitFieldName","state","payload","omit","undefined","field","touched","name","submitting","connect","formRed","dispatch","err","stateProps","dispatchProps","ownProps","keyActions","formActions","onSubmit","onSubmitFn","Error","onSubmitError","onSubmitSuccess","Form","valuesSet","props","autoDestroy","wrappedProps","Wrapped","React","Component","propTypes","PropTypes","object","isRequired","childContextTypes","Field","context","component","extra","touchOnBlur","string","func","contextTypes","mapPropsToOpts","ConnectedForm","connectToForm","displayName"],"mappings":"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"}